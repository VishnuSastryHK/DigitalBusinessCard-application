{
  "_from": "string-trim-spaces-only@^2.9.0",
  "_id": "string-trim-spaces-only@2.9.0",
  "_inBundle": false,
  "_integrity": "sha512-Ny/6ncfD52McLZbgYhhediuTzLGDjKd53H1QcJBFh1kbZRtsBntYmScJx5LeyPteGDRDbzP+qP6TyqJVj2ef9g==",
  "_location": "/string-trim-spaces-only",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "string-trim-spaces-only@^2.9.0",
    "name": "string-trim-spaces-only",
    "escapedName": "string-trim-spaces-only",
    "rawSpec": "^2.9.0",
    "saveSpec": null,
    "fetchSpec": "^2.9.0"
  },
  "_requiredBy": [
    "/ranges-push"
  ],
  "_resolved": "https://registry.npmjs.org/string-trim-spaces-only/-/string-trim-spaces-only-2.9.0.tgz",
  "_shasum": "8f6e18015683ee856b3c98f75304b7829dd21b49",
  "_spec": "string-trim-spaces-only@^2.9.0",
  "_where": "C:\\Users\\VISHNU SASTRY HK\\Desktop\\crudblog\\node_modules\\ranges-push",
  "author": {
    "name": "Roy Revelt",
    "email": "roy@codsen.com",
    "url": "https://codsen.com"
  },
  "browser": "dist/string-trim-spaces-only.umd.js",
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Like String.trim() but you can choose granularly what to trim",
  "devDependencies": {
    "@babel/core": "^7.12.7",
    "@babel/plugin-proposal-class-properties": "^7.12.1",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.12.1",
    "@babel/plugin-proposal-object-rest-spread": "^7.12.1",
    "@babel/plugin-proposal-optional-chaining": "^7.12.7",
    "@babel/preset-env": "^7.12.7",
    "@rollup/plugin-babel": "^5.2.1",
    "@rollup/plugin-commonjs": "^16.0.0",
    "@rollup/plugin-node-resolve": "^10.0.0",
    "@rollup/plugin-strip": "^2.0.0",
    "benchmark": "^2.1.4",
    "eslint": "^7.14.0",
    "lect": "^0.15.0",
    "rollup": "^2.33.3",
    "rollup-plugin-ascii": "^0.0.3",
    "rollup-plugin-banner": "^0.2.1",
    "rollup-plugin-cleanup": "^3.2.1",
    "rollup-plugin-terser": "^7.0.2",
    "tap": "^14.11.0",
    "tsd": "^0.13.1"
  },
  "homepage": "https://codsen.com/os/string-trim-spaces-only/",
  "husky": {
    "hooks": {
      "pre-commit": "npm run format && npm test"
    }
  },
  "keywords": [
    "characters",
    "end",
    "front",
    "just",
    "only",
    "space",
    "spaces",
    "string",
    "text",
    "trim"
  ],
  "lect": {
    "defaultExported": true,
    "files": {
      "delete": [],
      "write_hard": [
        {
          "contents": "",
          "name": ""
        }
      ],
      "write_soft": [
        {
          "contents": "",
          "name": ""
        }
      ]
    },
    "licence": {
      "extras": [
        ""
      ]
    },
    "npmignore": {
      "badFiles": [],
      "badFolders": [],
      "goodFiles": [],
      "goodFolders": []
    },
    "req": "trimSpaces",
    "various": {
      "devDependencies": []
    }
  },
  "license": "MIT",
  "main": "dist/string-trim-spaces-only.cjs.js",
  "module": "dist/string-trim-spaces-only.esm.js",
  "name": "string-trim-spaces-only",
  "repository": {
    "type": "git",
    "url": "https://git.sr.ht/~royston/codsen"
  },
  "scripts": {
    "build": "rollup -c",
    "ci_test": "npm run build && npm run lint && tap --no-only --reporter=silent --output-file=testStats.md && npm run clean_cov && npm run format",
    "clean_cov": "../../scripts/leaveCoverageTotalOnly.js",
    "dev": "rollup -c --dev",
    "devunittest": "npm run dev && ./node_modules/.bin/tap --only -R 'base' && npm run clean_cov",
    "format": "npm run lect && npm run prettier && npm run lint",
    "lect": "lect",
    "lint": "../../node_modules/eslint/bin/eslint.js \"**/*.js\" --fix --config \"../../.eslintrc.json\" --quiet",
    "perf": "node perf/check",
    "prepare": "npm run build",
    "pretest": "npm run build",
    "prettier": "../../node_modules/prettier/bin-prettier.js '*.{js,css,scss,vue,md,ts}' --write --loglevel silent",
    "republish": "npm publish || :",
    "tap": "tap",
    "test": "npm run lint && npm run unittest && npm run test:examples && npm run clean_cov && npm run format",
    "test:examples": "../../scripts/test-examples.js && npm run lect && npm run prettier",
    "tsd": "tsd",
    "unittest": "tap --no-only --output-file=testStats.md && npm run clean_cov && npm run perf",
    "version": "npm run build && git add ."
  },
  "tap": {
    "coverage-report": [
      "json-summary",
      "text"
    ],
    "nyc-arg": [
      "--exclude=**/*.cjs.js",
      "--exclude=**/*.umd.js"
    ],
    "timeout": 0
  },
  "version": "2.9.0"
}
